[project]
name = "accelperm"
version = "0.1.0"
description = "GPU-accelerated permutation testing for neuroimaging data"
readme = "README.md"
authors = [
    { name = "Russell Poldrack", email = "poldrack@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    # Core scientific computing
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    
    # Neuroimaging I/O
    "nibabel>=5.0.0",
    
    # GPU acceleration
    "torch>=2.0.0",
    
    # Data validation
    "pydantic>=2.0.0",
    
    # CLI
    "typer>=0.9.0",
    "rich>=13.0.0",
    
    # Configuration
    "toml>=0.10.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.0.0",
    "hypothesis>=6.0.0",
    
    # Code Quality
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "isort>=5.0.0",
    
    # Documentation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=2.0.0",
    
    # Development Tools
    "pre-commit>=3.0.0",
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    
    # Profiling
    "py-spy>=0.3.0",
    "memray>=1.0.0",
]

[project.scripts]
accelperm = "accelperm.cli:main"
gpu-randomise = "accelperm.cli:main"  # Alias for compatibility

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/accelperm"]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = ["E501", "B008"]  # line too long, function calls in argument defaults
exclude = [
    ".git",
    "__pycache__",
    "docs/conf.py",
    "build",
    "dist",
]

[tool.ruff.isort]
known-first-party = ["accelperm"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "nibabel.*",
    "scipy.*",
    "numpy.*",
    "torch.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=accelperm",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/accelperm"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"
